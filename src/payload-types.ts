/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    inventory: Inventory;
    'leave-days': LeaveDay;
    payroll: Payroll;
    'payroll-settings': PayrollSetting;
    'additional-payments': AdditionalPayment;
    roles: Role;
    departments: Department;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    inventory: InventorySelect<false> | InventorySelect<true>;
    'leave-days': LeaveDaysSelect<false> | LeaveDaysSelect<true>;
    payroll: PayrollSelect<false> | PayrollSelect<true>;
    'payroll-settings': PayrollSettingsSelect<false> | PayrollSettingsSelect<true>;
    'additional-payments': AdditionalPaymentsSelect<false> | AdditionalPaymentsSelect<true>;
    roles: RolesSelect<false> | RolesSelect<true>;
    departments: DepartmentsSelect<false> | DepartmentsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword:
    | {
        email: string;
      }
    | {
        username: string;
      };
  login:
    | {
        email: string;
        password: string;
      }
    | {
        password: string;
        username: string;
      };
  registerFirstUser: {
    password: string;
    username: string;
    email: string;
  };
  unlock:
    | {
        email: string;
      }
    | {
        username: string;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  fullName: string;
  photo?: (number | null) | Media;
  /**
   * Assign multiple departments (e.g., Sales + English, or just HR)
   */
  departments?: (number | Department)[] | null;
  role?: (number | null) | Role;
  jobTitle?: string | null;
  birthDate: string;
  primaryPhone: string;
  secondaryPhone?: string | null;
  secondaryEmail?: string | null;
  employmentType: 'citizen' | 'workPermit' | 'residencePermit' | 'other';
  nationality?: string | null;
  identificationNumber?: string | null;
  workPermitExpiry?: string | null;
  address?: string | null;
  documents?: (number | Media)[] | null;
  isActive?: boolean | null;
  /**
   * System users are hidden from regular user listings
   */
  isSystemUser?: boolean | null;
  joinedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  username: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "departments".
 */
export interface Department {
  id: number;
  name: string;
  /**
   * Is this a functional department (Sales, Field, HR) or a language department (English, Turkish)?
   */
  category: 'functional' | 'language';
  /**
   * The functional type (only for functional departments)
   */
  functionalType?: ('sales' | 'field' | 'marketing' | 'transfer' | 'hr' | 'dental' | 'other') | null;
  /**
   * The language code (only for language departments)
   */
  languageCode?: ('en' | 'tr' | 'pl' | 'ru' | 'fr' | 'de' | 'ro' | 'uk') | null;
  /**
   * Brief description of this department
   */
  description?: string | null;
  /**
   * Department manager/head (typically for functional departments)
   */
  manager?: (number | null) | User;
  /**
   * Whether this department is currently active
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roles".
 */
export interface Role {
  id: number;
  /**
   * E.g., HR Manager, Department Manager, Sales Representative, Doctor
   */
  name: string;
  /**
   * Determines the base permission level
   */
  level: 'admin' | 'manager' | 'employee' | 'restricted';
  /**
   * Brief description of this role and its responsibilities
   */
  description?: string | null;
  permissions?: {
    users?: {
      /**
       * Can view all users in the system
       */
      viewAll?: boolean | null;
      /**
       * Can view users in their own department
       */
      viewDepartment?: boolean | null;
      create?: boolean | null;
      edit?: boolean | null;
      delete?: boolean | null;
    };
    payroll?: {
      viewAll?: boolean | null;
      viewDepartment?: boolean | null;
      /**
       * Users can always view their own payroll
       */
      viewOwn?: boolean | null;
      create?: boolean | null;
      edit?: boolean | null;
      delete?: boolean | null;
      manageSettings?: boolean | null;
    };
    leaves?: {
      viewAll?: boolean | null;
      viewDepartment?: boolean | null;
      viewOwn?: boolean | null;
      create?: boolean | null;
      approve?: boolean | null;
      delete?: boolean | null;
    };
    inventory?: {
      viewAll?: boolean | null;
      viewOwn?: boolean | null;
      create?: boolean | null;
      edit?: boolean | null;
      assign?: boolean | null;
      delete?: boolean | null;
    };
    departments?: {
      view?: boolean | null;
      create?: boolean | null;
      edit?: boolean | null;
      delete?: boolean | null;
    };
    system?: {
      manageRoles?: boolean | null;
      viewReports?: boolean | null;
      systemSettings?: boolean | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventory".
 */
export interface Inventory {
  id: number;
  itemType: 'laptop' | 'phone' | 'accessory' | 'simCard' | 'other';
  model: string;
  serialNumber: string;
  holder?: (number | null) | User;
  status: 'inUse' | 'inStock' | 'needsRepair' | 'underRepair';
  purchaseDate?: string | null;
  warrantyExpiry?: string | null;
  image?: (number | Media)[] | null;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leave-days".
 */
export interface LeaveDay {
  id: number;
  user: number | User;
  type: 'annual' | 'sick' | 'unpaid' | 'other';
  startDate: string;
  endDate: string;
  totalDays?: number | null;
  status?: ('requested' | 'approved' | 'rejected' | 'cancelled') | null;
  reason: string;
  note?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll".
 */
export interface Payroll {
  id: number;
  employee: number | User;
  period: {
    month: '01' | '02' | '03' | '04' | '05' | '06' | '07' | '08' | '09' | '10' | '11' | '12';
    year: number;
  };
  payrollItems?:
    | {
        payrollSetting: number | PayrollSetting;
        description: string;
        payrollType?: ('primary' | 'bonus' | 'overtime' | 'commission' | 'allowance' | 'other') | null;
        amount: number;
        paymentType?: ('bankTransfer' | 'cash' | 'cheque') | null;
        id?: string | null;
      }[]
    | null;
  adjustments?: {
    bonusAmount?: number | null;
    deductionAmount?: number | null;
    adjustmentNote?: string | null;
  };
  /**
   * Total amount calculated from payroll items + adjustments
   */
  totalAmount?: number | null;
  paymentDetails?: {
    paymentDate?: string | null;
    /**
     * Transaction ID, cheque number, or other payment reference
     */
    paymentReference?: string | null;
    paymentNotes?: string | null;
  };
  status?: ('generated' | 'approved' | 'paid' | 'cancelled') | null;
  processedBy?: (number | null) | User;
  processedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll-settings".
 */
export interface PayrollSetting {
  id: number;
  employee: number | User;
  payrollType: 'primary' | 'bonus' | 'overtime' | 'commission' | 'allowance' | 'other';
  description?: string | null;
  paymentDetails: {
    amount: number;
    paymentType: 'bankTransfer' | 'cash' | 'cheque';
    paymentFrequency: 'monthly' | 'quarterly' | 'annual' | 'oneTime';
  };
  bankAccount?: {
    accountNumber?: string | null;
    bankName?: string | null;
    accountHolderName?: string | null;
    swiftCode?: string | null;
  };
  isActive?: boolean | null;
  effectiveDate: {
    startDate: string;
    /**
     * Leave empty for ongoing payments, set for temporary bonuses/deductions
     */
    endDate?: string | null;
  };
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "additional-payments".
 */
export interface AdditionalPayment {
  id: number;
  employee: number | User;
  /**
   * Type of additional payment
   */
  category: 'bonus' | 'deduction' | 'advance' | 'commission' | 'allowance' | 'other';
  /**
   * Brief description (e.g., "Performance bonus Q4", "Salary advance")
   */
  description: string;
  /**
   * Amount (positive for payments, can be positive for deductions too)
   */
  amount: number;
  paymentType: 'bankTransfer' | 'cash' | 'cheque';
  period: {
    /**
     * Period this payment relates to (for reporting)
     */
    month: '01' | '02' | '03' | '04' | '05' | '06' | '07' | '08' | '09' | '10' | '11' | '12';
    year: number;
  };
  /**
   * Date when the payment was made
   */
  paymentDate?: string | null;
  status: 'generated' | 'approved' | 'paid' | 'cancelled';
  /**
   * Additional notes or comments
   */
  notes?: string | null;
  /**
   * User who processed this payment
   */
  processedBy?: (number | null) | User;
  processedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'inventory';
        value: number | Inventory;
      } | null)
    | ({
        relationTo: 'leave-days';
        value: number | LeaveDay;
      } | null)
    | ({
        relationTo: 'payroll';
        value: number | Payroll;
      } | null)
    | ({
        relationTo: 'payroll-settings';
        value: number | PayrollSetting;
      } | null)
    | ({
        relationTo: 'additional-payments';
        value: number | AdditionalPayment;
      } | null)
    | ({
        relationTo: 'roles';
        value: number | Role;
      } | null)
    | ({
        relationTo: 'departments';
        value: number | Department;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  fullName?: T;
  photo?: T;
  departments?: T;
  role?: T;
  jobTitle?: T;
  birthDate?: T;
  primaryPhone?: T;
  secondaryPhone?: T;
  secondaryEmail?: T;
  employmentType?: T;
  nationality?: T;
  identificationNumber?: T;
  workPermitExpiry?: T;
  address?: T;
  documents?: T;
  isActive?: T;
  isSystemUser?: T;
  joinedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  username?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventory_select".
 */
export interface InventorySelect<T extends boolean = true> {
  itemType?: T;
  model?: T;
  serialNumber?: T;
  holder?: T;
  status?: T;
  purchaseDate?: T;
  warrantyExpiry?: T;
  image?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leave-days_select".
 */
export interface LeaveDaysSelect<T extends boolean = true> {
  user?: T;
  type?: T;
  startDate?: T;
  endDate?: T;
  totalDays?: T;
  status?: T;
  reason?: T;
  note?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll_select".
 */
export interface PayrollSelect<T extends boolean = true> {
  employee?: T;
  period?:
    | T
    | {
        month?: T;
        year?: T;
      };
  payrollItems?:
    | T
    | {
        payrollSetting?: T;
        description?: T;
        payrollType?: T;
        amount?: T;
        paymentType?: T;
        id?: T;
      };
  adjustments?:
    | T
    | {
        bonusAmount?: T;
        deductionAmount?: T;
        adjustmentNote?: T;
      };
  totalAmount?: T;
  paymentDetails?:
    | T
    | {
        paymentDate?: T;
        paymentReference?: T;
        paymentNotes?: T;
      };
  status?: T;
  processedBy?: T;
  processedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll-settings_select".
 */
export interface PayrollSettingsSelect<T extends boolean = true> {
  employee?: T;
  payrollType?: T;
  description?: T;
  paymentDetails?:
    | T
    | {
        amount?: T;
        paymentType?: T;
        paymentFrequency?: T;
      };
  bankAccount?:
    | T
    | {
        accountNumber?: T;
        bankName?: T;
        accountHolderName?: T;
        swiftCode?: T;
      };
  isActive?: T;
  effectiveDate?:
    | T
    | {
        startDate?: T;
        endDate?: T;
      };
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "additional-payments_select".
 */
export interface AdditionalPaymentsSelect<T extends boolean = true> {
  employee?: T;
  category?: T;
  description?: T;
  amount?: T;
  paymentType?: T;
  period?:
    | T
    | {
        month?: T;
        year?: T;
      };
  paymentDate?: T;
  status?: T;
  notes?: T;
  processedBy?: T;
  processedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roles_select".
 */
export interface RolesSelect<T extends boolean = true> {
  name?: T;
  level?: T;
  description?: T;
  permissions?:
    | T
    | {
        users?:
          | T
          | {
              viewAll?: T;
              viewDepartment?: T;
              create?: T;
              edit?: T;
              delete?: T;
            };
        payroll?:
          | T
          | {
              viewAll?: T;
              viewDepartment?: T;
              viewOwn?: T;
              create?: T;
              edit?: T;
              delete?: T;
              manageSettings?: T;
            };
        leaves?:
          | T
          | {
              viewAll?: T;
              viewDepartment?: T;
              viewOwn?: T;
              create?: T;
              approve?: T;
              delete?: T;
            };
        inventory?:
          | T
          | {
              viewAll?: T;
              viewOwn?: T;
              create?: T;
              edit?: T;
              assign?: T;
              delete?: T;
            };
        departments?:
          | T
          | {
              view?: T;
              create?: T;
              edit?: T;
              delete?: T;
            };
        system?:
          | T
          | {
              manageRoles?: T;
              viewReports?: T;
              systemSettings?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "departments_select".
 */
export interface DepartmentsSelect<T extends boolean = true> {
  name?: T;
  category?: T;
  functionalType?: T;
  languageCode?: T;
  description?: T;
  manager?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}